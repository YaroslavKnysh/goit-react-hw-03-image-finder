{"version":3,"sources":["component/Services.jsx","component/Searchbar.jsx","component/ImageGalleryItem.jsx","component/ImageGallery.jsx","component/Button.jsx","component/Modal.jsx","App.js","index.js"],"names":["GetApi","searchQuery","pageNumber","axios","get","Searchbar","onSubmitForm","onSearchInput","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","ImageGalleryItem","imageSmall","onFullSize","src","onClick","alt","ImageGallery","imagesArr","map","image","webformatURL","imageLarge","largeImageURL","id","Button","onNextPage","Modal","props","handleKeyDown","bind","handleBackdropClick","window","addEventListener","this","removeEventListener","e","code","console","log","onCloseModal","currentTarget","target","largeImage","Component","App","state","images","isLoading","modalOpen","fetchImages","handleChange","nextPage","openFullSize","setState","setTimeout","then","response","data","hits","finally","value","preventDefault","pegeNumber","color","height","width","timeout","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7260cc96.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nfunction GetApi(searchQuery, pageNumber) {\r\n  return axios.get(\r\n    `https://pixabay.com/api/?q=${searchQuery}&page=${pageNumber}&key=23926259-20170b2e8904d12034176c2be&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n}\r\n\r\nexport default GetApi;\r\n","import React from 'react';\r\n\r\nconst Searchbar = ({ onSubmitForm, onSearchInput }) => (\r\n  <header className=\"searchbar\">\r\n    <form className=\"form\" onSubmit={onSubmitForm}>\r\n      <button type=\"submit\" className=\"search-button\">\r\n        <span className=\"button-label\">Search</span>\r\n      </button>\r\n\r\n      <input\r\n        className=\"search-input\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search images and photos\"\r\n        onChange={onSearchInput}\r\n      />\r\n    </form>\r\n  </header>\r\n);\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({ imageSmall, onFullSize }) => (\r\n  <li className=\"gallery-item\">\r\n    <img className=\"image\" src={imageSmall} onClick={onFullSize} alt=\"\" />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ imagesArr, onFullSize }) => (\r\n  <ul className=\"gallery\">\r\n    {imagesArr.map(image => (\r\n      <ImageGalleryItem\r\n        imageSmall={image.webformatURL}\r\n        imageLarge={image.largeImageURL}\r\n        onFullSize={() => onFullSize(image.largeImageURL)}\r\n        key={image.id}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\n\r\nconst Button = ({ onNextPage }) => (\r\n  <div className=\"loadButton-container\">\r\n    <button type=\"button\" className=\"loadButton\" onClick={onNextPage}>\r\n      Load more\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleBackdropClick = this.handleBackdropClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    if (e.code === 'Escape') {\r\n      console.log('modal close');\r\n      this.props.onCloseModal();\r\n      // this.setState({ modalOpen: false });\r\n    }\r\n  }\r\n  handleBackdropClick(e) {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onCloseModal();\r\n      // this.setState({ modalOpen: false });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"modal\">\r\n          <img src={this.props.largeImage} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport './component/style.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport GetApi from './component/Services';\nimport Searchbar from './component/Searchbar';\nimport ImageGallery from './component/ImageGallery';\nimport Button from './component/Button';\nimport Modal from './component/Modal';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      images: [],\n      pageNumber: 1,\n      searchQuery: '',\n      isLoading: false,\n      modalOpen: false,\n      largeImage: '',\n    };\n    this.fetchImages = this.fetchImages.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.openFullSize = this.openFullSize.bind(this);\n  }\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  fetchImages() {\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      GetApi(this.state.searchQuery, this.state.pageNumber)\n        .then(response =>\n          this.setState({\n            images: [...this.state.images, ...response.data.hits],\n          }),\n        )\n        .finally(() => this.setState({ isLoading: false }));\n\n      // axios\n      //   .get(\n      //     `https://pixabay.com/api/?q=${this.state.searchQuery}&page=${this.state.pageNumber}&key=23926259-20170b2e8904d12034176c2be&image_type=photo&orientation=horizontal&per_page=12`,\n      //   )\n      //   .then(response =>\n      //     this.setState({\n      //       images: [...this.state.images, ...response.data.hits],\n      //     }),\n      //   )\n      //   .finally(() => this.setState({ isLoading: false }));\n    }, 1500);\n  }\n  handleChange(e) {\n    this.setState({ searchQuery: e.target.value });\n  }\n  nextPage() {\n    this.setState({ pageNumber: this.state.pageNumber + 1 }, e =>\n      this.fetchImages(),\n    );\n  }\n  openFullSize(largeImage) {\n    this.setState({ modalOpen: true, largeImage });\n  }\n  render() {\n    return (\n      <div>\n        <Searchbar\n          onSubmitForm={e => {\n            e.preventDefault();\n            this.setState({ images: [], pegeNumber: 1 }, e =>\n              this.fetchImages(),\n            );\n          }}\n          onSearchInput={this.handleChange}\n        />\n        {/* <header className=\"searchbar\">\n          <form\n            className=\"form\"\n            onSubmit={e => {\n              e.preventDefault();\n              this.setState({ images: [], pegeNumber: 1 }, e =>\n                this.fetchImages(),\n              );\n            }}\n          >\n            <button type=\"submit\" className=\"search-button\">\n              <span className=\"button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"search-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              onChange={this.handleChange}\n            />\n          </form>\n        </header> */}\n        {this.state.isLoading && (\n          <Loader\n            className=\"loader\"\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={300}\n            width={300}\n            timeout={3000} //3 secs\n          />\n        )}\n        <ImageGallery\n          imagesArr={this.state.images}\n          onFullSize={this.openFullSize}\n        />\n\n        {/* <ul className=\"gallery\">\n          {this.state.images.map(image => (\n            <li className=\"gallery-item\" key={image.id}>\n              <img\n                className=\"image\"\n                src={image.webformatURL}\n                onClick={e => this.openFullSize(image.largeImageURL)}\n                alt=\"\"\n              />\n            </li>\n          ))}\n        </ul> */}\n        {this.state.images.length > 0 && <Button onNextPage={this.nextPage} />}\n        {/* <div className=\"loadButton-container\">\n          {this.state.images.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"loadButton\"\n              onClick={this.nextPage}\n            >\n              Load more\n            </button>\n          )}\n        </div> */}\n\n        {this.state.modalOpen === true && (\n          <Modal\n            onCloseModal={() => this.setState({ modalOpen: false })}\n            largeImage={this.state.largeImage}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}